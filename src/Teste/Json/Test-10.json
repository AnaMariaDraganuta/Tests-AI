{
  "SolicitareaClientului": "Solicitarea client: Aplicatie utilizator automobile si reteaua de service, sistem OBD care să comunice cu telefonul. Aplicația să anunțe și să dea notificări când expiră ITP, să introducă erorile din bord, să poată chema mașina cu platforma pentru ridicare din aplicație. Oferta pentru firma - Test 10",
  "Oferta": {
    "ScopulDocumentului": "I. Scopul documentului: Această ofertă preliminară este bazată pe informațiile pe care ni le-ați furnizat. Înainte de a începe efectiv dezvoltarea și de a vă putea oferi o estimare exactă a costurilor și timpului necesar, va fi necesar să parcurgem câteva etape esențiale de planificare: 1. Elaborarea unei diagrame logice pentru a defini arhitectura aplicației. 2. Crearea unei diagrame ER pentru a structura baza de date. 3. Realizarea unui design inițial în Figma pentru a elimina orice ambiguitate legată de interfața grafică. Pentru începerea etapelor de mai sus, va fi necesar să semnăm un contract de colaborare și să achitați în avans prețul acestora: Diagrama logică și diagrama ER: X Euro + TVA. Proiectul în Figma: X Euro + TVA. Acești bani se vor scădea din prețul total de dezvoltare odată acceptată oferta fermă. Oferta de mai jos este doar orientativă și urmărește să vă ofere o perspectivă asupra modului în care operăm și a costurilor probabile. Pentru o ofertă și un timp de implementare exact, va fi necesar să completăm etapele de planificare menționate.",
    "Definitii": {
      "React": "React este o bibliotecă JavaScript pentru construirea interfețelor de utilizator. Este utilizată pentru crearea unor interfețe de utilizator reactive și eficiente din punct de vedere al performanței.",
      "Ionic": "Ionic este un framework open-source pentru dezvoltarea de aplicații mobile hibride. Utilizează tehnologii web precum JavaScript/React/Angular pentru a construi aplicații pentru platforme mobile, cum ar fi iOS și Android.",
      "NestJS": "NestJS este un framework pentru dezvoltarea de aplicații server-side cu Node.js. Este construit pe baza arhitecturii modulare și utilizează TypeScript pentru a oferi un cod bine structurat și ușor de întreținut.",
      "Firebase": "Firebase este o platformă de dezvoltare a aplicațiilor mobile. Furnizează servicii precum bază de date în timp real, autentificare, stocare și hosting, facilitând dezvoltarea rapidă și scalabilă a aplicațiilor.",
      "MongoDB": "MongoDB este un sistem de gestionare a bazelor de date NoSQL, orientat pe documente. În loc de tabele, MongoDB folosește colecții și documente JSON-like, oferind flexibilitate și scalabilitate în stocarea datelor.",
      "API": "API (Interfață de Programare a Aplicațiilor) reprezintă un set de reguli și protocoale care permit comunicarea între diferite componente ale software-ului/aplicației. Este folosit pentru a permite integrarea între diferite aplicații sau servicii, facilitând schimbul de informații și funcționalități între ele."
    }
  },
  "PropunereStructura": {
    "DezvoltareBaza": "Dezvoltarea aplicațiilor folosind tehnologii moderne, cum ar fi React cu Ionic pentru interfața utilizatorului și MongoDB/Firebase pentru baza de date și NestJs pentru back-end. Conectare utilizatori cu autentificare OTP prin SMS/email pentru securitate sporită. Sistem de permisiuni: administratorii vor fi împărțiți în super-admin și admin. Super-adminii vor putea să adauge alți admini și să atribuie permisiuni unui admin pentru a vedea doar una sau mai multe secțiuni.",
    "FuncionalitatiUtilizator": {
      "SistemGestionareMasini": "Clienții pot adăuga mai multe mașini în aplicație și pot atribui alt cont unei mașini, astfel încât utilizatorul/șoferul mașinii respective să poată apela direct către servicii în mod simplu și rapid.",
      "MonitorizareITP": "Prin intermediul aplicației, utilizatorii vor primi notificări în avans despre expirarea inspecției tehnice periodice (ITP), asigurare (RCA), asigurându-se astfel că sunt mereu în conformitate cu normele legale.",
      "InregistrareEroriBord": "Utilizatorii pot înregistra erorile afișate pe bordul mașinii, iar aplicația va genera solicitări pentru administratori pentru a facilita remedierea acestora.",
      "ServiciiPlatformaMobila": "Oferim posibilitatea utilizatorilor de a solicita servicii cu platforma mobilă, asigurându-le astfel confortul și comoditatea necesare.",
      "ProgramariService": "Utilizatorii pot programa și gestiona direct din aplicație întreținerea și service-ul pentru mașina lor, simplificând procesul și eliminând barierele logistice.",
      "VizualizareProgramariViitoare": "Posibilitatea de a vizualiza și gestiona toate programările viitoare pentru mentenanța mașinii într-un mod intuitiv și accesibil.",
      "SistemFacturare": "În aplicația clienților, se va genera o factură (generată din aplicația administratorilor) pentru manoperă și piesele folosite în repararea unei mașini. Clientul va primi factura în aplicație și va avea 3 metode de plată: 1) plată online direct cu cardul, 2) plată prin ordin de plată (poate copia datele contului bancar al firmei), 3) plată ramburs."
    },
    "FuncionalitatiAdministrator": {
      "AccesClientiProgramari": "Administratorul are acces facil la toți clienții și la programările acestora, facilitând gestionarea eficientă a întregii rețele de utilizatori.",
      "SectiuneAjutorUrgențe": "O secțiune specializată pentru gestionarea solicitărilor de ajutor și urgențelor, asigurând o intervenție rapidă și eficientă în situații critice.",
      "GestionareClientiProgramari": "Aplicația oferă instrumente pentru gestionarea completă a clienților și programărilor acestora, facilitând administrarea integrală a rețelei.",
      "ProgramariAutomateManuale": "Posibilitatea de a adăuga manual programări pentru mentenanță sau de a le programa automat în funcție de tipul de mașină și numărul de kilometri parcurși, asigurând un program de mentenanță eficient și bine pus la punct.",
      "SistemGenerareFacturi": "Administratorii vor putea să genereze facturile și \"comenzi/reparații\" prin intermediul unui API conectat la SmartBill (sau alt serviciu de facturare) și legarea API-ului la un gateway precum Stripe sau altă bancă din România (euPlatesc etc.)."
    }
  },
  "SugestiiSuplimentare": {
    "UrmarireaPlatformei": "Dacă un client solicită platforma pentru o defectiune, administratorul va vedea pe hartă punctul exact unde se află clientul, iar clientul, la rândul lui, va vedea pe hartă în timp real unde este platforma și cât timp mai este până să sosească. (40 ore de muncă * 2 programatori)",
    "ChatInTimpReal": "Clientul va avea un chat în timp real cu service-ul, unde poate comunica direct pe chat în caz de probleme. (100 ore de muncă * 2 programatori)"
  },
  "PretSiTimpDeImplementare": {
    "DezvoltareBaza": "Dezvoltare de bază împreună cu funcționalități pentru Utilizator și Administrator (440 de ore x 2 programatori): X Euro + TVA",
    "DezvoltareCompleta": "Dezvoltare de bază împreună cu funcționalități pentru Utilizator și Administrator și sugestii suplimentare (580 de ore x 2 programatori): X Euro + TVA",
    "Observatii": "*Fiecare punct poate fi supus modificării, editării sau realizării într-un mod mai sumar, cu reducerea funcționalităților, în vederea obținerii unei costuri mai reduse. *Prețul este orientativ și nu trebuie să fie limitativ; în cazul în care bugetul beneficiarului este mai restrâns decât oferta noastră în faza de proiectare, putem identifica alternative la costuri inferioare prin integrarea unui număr redus de funcționalități. Timpul de livrare este influențat de complexitatea proiect"
  }
}
